@page "/profil"
@attribute [Authorize(Roles = "Pacient")]
@using HospitalManager.Client.Components.Layout.Patient
@using Microsoft.AspNetCore.Authorization
@using System.Text.Json
@using System.Text.Json.Serialization

@inject IHttpClientFactory httpClientFactory

<div class="container row">

    <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" fill="currentColor" class="bi bi-person-circle m-5" viewBox="0 0 16 16">
        <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
        <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
    </svg>

    <div class="row align-items-center mb-3 mt-4">
        <p class="col-auto text-muted fs-5 fw-bold">Vaše kontaknté údaje</p>
        <hr class="col"/>
    </div>

    <div class="ms-4">

        <ProfileField Text="Meno" Value="@Name"/>

        <ProfileField Text="Priezvisko" Value="@Surname" />

        <ProfileField Text="Telefón" Value="@Phone" />

        <ProfileField Text="E-mail" Value="@Mail" />

        <ProfileField Text="Rodné číslo" Value="@BirthNumber" />

    </div>


    <div class="row align-items-center mb-3 mt-5">
        <p class="col-auto text-muted fs-5 fw-bold">Poisťovňa</p>
        <hr class="col" />
    </div>

    <div class="ms-4">
        <ProfileField Text="Zdravotná poisťovňa" Value="@Insurance"/>
    </div>

    @* <button type="button" class="btn btn-success w-25 m-4">Uložiť</button> *@
</div>


@code {
    private Profil profile = new Profil();

    public string BirthNumber { get; set; } = "Loading";
    public string Name { get; set; } = "Loading";
    public string Surname { get; set; } = "Loading";
    public string Phone { get; set; } = "Loading";
    public string Mail { get; set; } = "Loading";
    public string Insurance { get; set; } = "Loading";

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("APIClient");

        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get, "api/patients/1?expandPerson=true");
            var response = await httpClient.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);
            response.EnsureSuccessStatusCode();
            var responseString = await response.Content.ReadAsStringAsync();
            Console.WriteLine(responseString);

            profile = JsonSerializer.Deserialize<Profil>(responseString);

            Console.WriteLine(profile.Person.FirstName);

            BirthNumber = profile.BirthNumber;
            Name = profile.Person.FirstName;
            Surname = profile.Person.LastName;
            Phone = profile.Person.Telephone;
            Mail = profile.Person.Email;
            Insurance = profile.InsuranceId.ToString();
        }
        catch (HttpRequestException ex)
        {

            Console.WriteLine($"Request error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }
    }

    public class Profil
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }

        [JsonPropertyName("insuranceId")]
        public int InsuranceId { get; set; }

        [JsonPropertyName("birthNumber")]
        public string BirthNumber { get; set; }

        [JsonPropertyName("allergies")]
        public string? Allergies { get; set; }

        [JsonPropertyName("bloodGroup")]
        public string? BloodGroup { get; set; }

        [JsonPropertyName("medications")]
        public string? Medications { get; set; }

        [JsonPropertyName("vaccines")]
        public string? Vaccines { get; set; }

        [JsonPropertyName("person")]
        public Person Person { get; set; }
    }

    public class Person
    {
        [JsonPropertyName("birthNumber")]
        public string BirthNumber { get; set; }

        [JsonPropertyName("firstName")]
        public string FirstName { get; set; }

        [JsonPropertyName("lastName")]
        public string LastName { get; set; }

        [JsonPropertyName("email")]
        public string Email { get; set; }

        [JsonPropertyName("telephone")]
        public string Telephone { get; set; }

        [JsonPropertyName("addressId")]
        public int AddressId { get; set; }

        [JsonPropertyName("userId")]
        public int UserId { get; set; }
    }

}
