@page "/patients"
@using HospitalManager.Shared.Models
@using Microsoft.AspNetCore.Authorization
@inject IHttpClientFactory httpClientFactory
@using System.Text.Json
@attribute [StreamRendering]
@attribute [Authorize(Roles = "Doktor")]

<PageTitle>Patients</PageTitle>
<h1 class="text-center my-4">Zoznam pacientov</h1>
<div class="d-flex justify-content-end">
    <button class="btn btn-primary mt-4" type="button" data-bs-toggle="offcanvas" data-bs-target="#patientDetailsOffcanvas" aria-controls="patientDetailsOffcanvas">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-add" viewBox="0 0 16 16">
            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0m-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4"></path>
            <path d="M8.256 14a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1z"></path>
        </svg>
        Pridať pacienta
    </button>
</div>

<div class="d-flex justify-content-center">
    <table class="table table-striped table-bordered mt-5" style="width: 80%;">
        <thead>
        <tr>
            <th scope="col">Meno</th>
            <th scope="col">Priezvisko</th>
            <th scope="col">Rodné číslo</th>
            <th scope="col">Tel. číslo</th>
            <th scope="col">Email</th>
            <th scope="col" style="width: 160px">Detaily pacienta</th>
            <th scope="col" style="width: 100px">Prehliadka</th>
        </tr>
        </thead>
        <tbody>
        @if (patients != null && patients.Any())
        {
        @foreach (var patient in patients)
        {
        <tr>
            <td>@patient?.Person?.FirstName</td>
            <td>@patient?.Person?.LastName</td>
            <td>@patient?.BirthNumber</td>
            <td>@patient?.Person?.Telephone</td>
            <td>@patient?.Person?.Email</td>
            <td>
                <NavLink href="@($"/patients/details/{patient?.Id}")" class="btn btn-info">Detaily pacienta</NavLink>
            </td>
            <td>
                <NavLink href="@($"/examination/{patient?.Id}")" class="btn btn-success">Vytvoriť</NavLink>
            </td>
        </tr>
        }
        }
        else
        {
        <tr>
            <td colspan="7" class="text-center">Načítavam dáta...</td>
        </tr>
        }
        </tbody>
    </table>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="patientDetailsOffcanvas" aria-labelledby="patientDetailsOffcanvas">
    <div class="offcanvas-header">
        <h5 id="editPatientOffcanvasLabel">Pridať pacienta</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <EditForm Model="newPatient" FormName="patientForm">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="name" class="form-label">Meno</label>
                <InputText id="name" class="form-control" @bind-Value="newPatient.Person.FirstName" />
            </div>
            <div class="mb-3">
                <label for="surname" class="form-label">Priezvisko</label>
                <InputText id="surname" class="form-control" @bind-Value="newPatient.Person.LastName" />
            </div>
            <div class="mb-3">
                <label for="birthNumber" class="form-label">Rodné číslo</label>
                <InputText id="birthNumber" class="form-control" @bind-Value="newPatient.BirthNumber" />
            </div>
            <div class="mb-3">
                <label for="telephone" class="form-label">Telefón</label>
                <InputText id="telephone" class="form-control" @bind-Value="newPatient.Person.Telephone" />
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" type="email" class="form-control" @bind-Value="newPatient.Person.Email" />
            </div>
            <button class="btn btn-primary" @onclick="async () => await AddPatient()">Uložiť</button>
        </EditForm>
    </div>
</div>

@code {
    private List<PatientDTO> patients = new List<PatientDTO>();
    private PatientDTO newPatient = new PatientDTO
    {
        Person = new PersonDTO()
    };

    protected override async Task OnInitializedAsync()
    {
        if (newPatient == null)
        {
            newPatient = new PatientDTO();
        }
        if (newPatient.Person == null)
        {
            newPatient.Person = new PersonDTO();
        }

        await LoadPatients();
    }
    private async Task LoadPatients()
    {
        var httpClient = httpClientFactory.CreateClient("APIClient");
        try
        {
            
            // Načítanie pacientov
            var request = new HttpRequestMessage(HttpMethod.Get, "api/patients/?expandPerson=True");
            var response = await httpClient.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);
            response.EnsureSuccessStatusCode();

            var responseString = await response.Content.ReadAsStringAsync();
            patients = JsonSerializer.Deserialize<List<PatientDTO>>(responseString, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Request error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }
    }
    private async Task AddPatient()
    {
        if (newPatient.Person == null)
        {
            newPatient.Person = new PersonDTO();
        }
        Console.WriteLine($"FirstName: {newPatient.Person?.FirstName}");
        Console.WriteLine($"BirthNumber: {newPatient.BirthNumber}");
        var httpClient = httpClientFactory.CreateClient("APIClient");
        try
        {
            var patientToSend = new
            {
                BirthNumber = newPatient.BirthNumber,
                FirstName = newPatient.Person.FirstName,
                LastName = newPatient.Person.LastName,
                Email = newPatient.Person.Email,
                Telephone = newPatient.Person.Telephone
            };

            var jsonContent = JsonSerializer.Serialize(patientToSend);
            var content = new StringContent(jsonContent, System.Text.Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync("/api/patients/register", content);
            Console.WriteLine("Odosielaný JSON:");
            Console.WriteLine(jsonContent);
            response.EnsureSuccessStatusCode();
            
            Console.WriteLine("Požiadavka bola úspešne odoslaná.");
            newPatient = new PatientDTO();
            await LoadPatients();
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Request error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }
    }
}