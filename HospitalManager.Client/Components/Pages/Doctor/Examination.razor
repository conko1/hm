@page "/examination/{id:int}"
@attribute [Authorize(Roles = "Doktor")]
@using HospitalManager.Shared.Models
@inject IHttpClientFactory httpClientFactory
@using System.Text.Json
@using Microsoft.AspNetCore.Authorization
<PageTitle>Examination</PageTitle>

<div class="container">
    @if (patient != null)
    {
        <div class="row">
            <div class="col-md-4">
                <h4>Informácie o pacientovi</h4>
                <ul class="list-unstyled">
                    <li>
                        <strong>Alergie:</strong> @patient.Allergies
                    </li>
                    <li>
                        <strong>Krvná skupina:</strong> @patient.BloodGroup
                    </li>
                    <li>
                        <strong>Pravidelné užívané lieky:</strong> @patient.Medications
                    </li>
                    <li>
                        <strong>Očkovania:</strong> @patient.Vaccines
                    </li>
                </ul>
            </div>
        </div>
    }
    else
    {
        <p>Načítavam údaje o pacientovi...</p>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="symptoms">Symptómy</label>
                <textarea id="symptoms" class="form-control" rows="5"></textarea>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label for="diagnosis">Diagnóza</label>
                <textarea id="diagnosis" class="form-control" rows="5"></textarea>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="treatment">Liečba</label>
                <textarea id="treatment" class="form-control" rows="5"></textarea>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="notes">Poznámky</label>
                <textarea id="notes" class="form-control" rows="5"></textarea>
            </div>
        </div>
    </div>

    <div>
        <div class="d-flex justify-content-end">
            <button class="btn btn-primary mt-2" data-bs-toggle="offcanvas" data-bs-target="#editPatientOffcanvas">
                Uložiť
            </button>
        </div>
    </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="editPatientOffcanvas">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title">Pridať liek a dávkovanie</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        @if (medicines != null && medicines.Any())
        {
            <div class="form-group mb-3">
                <label for="medicineSelect">Vyberte liek</label>
                <select id="medicineSelect" class="form-select" @bind="selectedMedicineId">
                    <option value="" disabled selected>Vyberte liek...</option>
                    @foreach (var medicine in medicines)
                    {
                        <option value="@medicine.Id">@medicine.Name</option>
                    }
                </select>
            </div>
            <div class="form-group mb-3">
                <label for="dosage">Dávkovanie</label>
                <input type="text" id="dosage" class="form-control" placeholder="Zadajte dávkovanie">
            </div>
            <div class="d-flex justify-content-end">
                <button class="btn btn-success">Pridať</button>
            </div>
        }
        else
        {
            <p>Načítavam lieky...</p>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private List<MedicineDTO> medicines = new List<MedicineDTO>();
    private PatientDTO? patient;

    private int? selectedMedicineId;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = httpClientFactory.CreateClient("APIClient");

        try
        {
// Načítanie pacienta
            var patientRequest = new HttpRequestMessage(HttpMethod.Get, $"/api/patients/{Id}");
            var patientResponse = await httpClient.SendAsync(patientRequest, HttpCompletionOption.ResponseHeadersRead);
            patientResponse.EnsureSuccessStatusCode();

            var patientResponseString = await patientResponse.Content.ReadAsStringAsync();
            patient = JsonSerializer.Deserialize<PatientDTO>(patientResponseString, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });

// Načítanie liekov
            var request = new HttpRequestMessage(HttpMethod.Get, "/api/medicine/");
            var response = await httpClient.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);
            response.EnsureSuccessStatusCode();

            var responseString = await response.Content.ReadAsStringAsync();
            medicines = JsonSerializer.Deserialize<List<MedicineDTO>>(responseString);
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Request error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }
    }
}